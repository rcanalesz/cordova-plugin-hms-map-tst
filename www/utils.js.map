{"version":3,"file":"utils.js","sourceRoot":"","sources":["../scripts/utils.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,qCAA4B;AAE5B,4DAA4D;AAC5D,gBAAgB;AAChB,4DAA4D;AAE/C,QAAA,QAAQ,GAAG,CAAC,EAAO,EAAE,EAAE,CAAC,OAAO,EAAE,KAAK,QAAQ,IAAI,EAAE,YAAY,MAAM,CAAC;AACvE,QAAA,QAAQ,GAAG,CAAC,GAAQ,EAAE,EAAE,CAAC,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,CAAC;AAE9E,SAAgB,SAAS,CAAE,KAAa,EAAE,IAAY,EAAE,OAAY,EAAE;IAClE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACnC,cAAI,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;AACP,CAAC;AAJD,8BAIC;AAAA,CAAC;AAqBF,SAAS,OAAO;IACZ,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IACnC,gBAAgB,EAAE,CAAC;IACnB,kBAAkB,EAAE,CAAC;AACzB,CAAC;AAED,SAAS,gBAAgB;IACrB,IAAI,MAAM,CAAC,eAAe,IAAI,IAAI,EAAE;QAChC,OAAO;KACV;IAED,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;IACjD,MAAM,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAE7B,MAAM,CAAC,eAAe,GAAG,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE;QACzC,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,SAAS,GAAG,cAAc,EAAE,IAAI,CAAC,CAAC;QAClE,IAAI,MAAM,CAAC,gBAAgB,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;YACnD,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,OAAgB,EAAE,EAAE;gBAC5D,OAAO,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;SACN;IACL,CAAC,CAAC;IAEF,MAAM,CAAC,gBAAgB,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,EAAE;QAC7C,IAAI,MAAM,CAAC,gBAAgB,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;YACnD,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACpD;aAAM;YACH,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAClD;IACL,CAAC,CAAC;IAEF,MAAM,CAAC,kBAAkB,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,EAAE;QAC/C,IAAI,MAAM,CAAC,gBAAgB,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;YACnD,IAAI,OAAO,EAAE;gBACT,MAAM,GAAG,GAAG,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAChE,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE;oBACV,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;iBACrD;aACJ;iBAAM,EAAE,kDAAkD;gBACvD,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;aAC3C;SACJ;IACL,CAAC,CAAC;AACN,CAAC;AAED,SAAS,kBAAkB;IACvB,IAAI,MAAM,CAAC,eAAe,IAAI,IAAI,EAAE;QAChC,OAAO;KACV;IAED,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;IACjD,MAAM,CAAC,eAAe,GAAG,CAAC,OAAe,EAAE,SAAS,EAAE,EAAE;QACpD,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;QAEjF,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;YAC5C,OAAO;SACV;QAED,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACjC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,EAAC,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAED,4DAA4D;AAC5D,SAAS;AACT,4DAA4D;AAE5D,OAAO,EAAE,CAAA","sourcesContent":["/**\r\n * Copyright 2020 Huawei Technologies Co., Ltd.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport {exec} from 'cordova'\r\n\r\n// /////////////////////////////////////////////////////////\r\n// GENERAL UTILS\r\n// /////////////////////////////////////////////////////////\r\n\r\nexport const isString = (it: any) => typeof it === 'string' || it instanceof String;\r\nexport const isObject = (obj: any) => typeof obj === 'object' && obj !== null;\r\n\r\nexport function asyncExec (clazz: string, func: string, args: any[]=[]) : Promise<any>{\r\n    return new Promise((resolve, reject) => {\r\n        exec(resolve, reject, clazz, func, args);\r\n    });\r\n};\r\n\r\n// /////////////////////////////////////////////////////////\r\n// Event system\r\n// /////////////////////////////////////////////////////////\r\n\r\nexport type Handler = (data: any, data2?: any) => void;\r\n\r\ndeclare global {\r\n    interface Window {\r\n        hmsEventHandlers: {\r\n            [key: string]: Handler[]\r\n        },\r\n        hmsEventHandler: (eventName: string, data: any) => void,\r\n        registerHMSEvent: (eventName: string, handler: Handler) => void\r\n        unregisterHMSEvent: (eventName: string, handler: Handler) => void\r\n        hmsSetConstants: (objName: string, constans: any) => void,\r\n        [key: string]: any\r\n    }\r\n}\r\n\r\nfunction initHms() {\r\n    console.log('hms :: init called.');\r\n    initEventHandler();\r\n    initConstantSetter();\r\n}\r\n\r\nfunction initEventHandler() {\r\n    if (window.hmsEventHandler != null) {\r\n        return;\r\n    }\r\n\r\n    console.log('hms-map :: window.hmsEventHandler');\r\n    window.hmsEventHandlers = {};\r\n\r\n    window.hmsEventHandler = (eventName, data) => {\r\n        console.log('eventReceived: ' + eventName + ' with data: ', data);\r\n        if (window.hmsEventHandlers.hasOwnProperty(eventName)) {\r\n            window.hmsEventHandlers[eventName].forEach((handler: Handler) => {\r\n                handler(data);\r\n            });\r\n        }\r\n    };\r\n\r\n    window.registerHMSEvent = (eventName, handler) => {\r\n        if (window.hmsEventHandlers.hasOwnProperty(eventName)) {\r\n            window.hmsEventHandlers[eventName].push(handler);\r\n        } else {\r\n            window.hmsEventHandlers[eventName] = [handler];\r\n        }\r\n    };\r\n\r\n    window.unregisterHMSEvent = (eventName, handler) => {\r\n        if (window.hmsEventHandlers.hasOwnProperty(eventName)) {\r\n            if (handler) {\r\n                const idx = window.hmsEventHandlers[eventName].indexOf(handler);\r\n                if (idx > -1) {\r\n                    window.hmsEventHandlers[eventName].splice(idx, 1);\r\n                }\r\n            } else { // if no specific handler is specified, remove all\r\n                window.hmsEventHandlers[eventName] = [];\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction initConstantSetter() {\r\n    if (window.hmsSetConstants != null) {\r\n        return;\r\n    }\r\n\r\n    console.log('hms-map :: window.hmsSetConstants');\r\n    window.hmsSetConstants = (objName: string, constants) => {\r\n        console.log('hms-map :: initializing constants for', objName, 'with', constants);\r\n\r\n        if (window[objName] == null) {\r\n            console.log('hms-map :: uninitialized obj');\r\n            return;\r\n        }\r\n\r\n        Object.keys(constants).forEach(key => {\r\n            Object.defineProperty(window[objName], key, {value: constants[key]});\r\n        });\r\n    };\r\n}\r\n\r\n// /////////////////////////////////////////////////////////\r\n// EXPORT\r\n// /////////////////////////////////////////////////////////\r\n\r\ninitHms()"]}